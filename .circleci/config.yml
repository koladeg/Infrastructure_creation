# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
    steps:
      - run: 
         name: Destroy environment
         # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
         # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
         when: on_fail
         command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
             aws cloudformation deploy \
               --template-file template.yml \
               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
               --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - add_ssh_keys:
         fingerprints: [99:6e:62:f0:68:6c:6d:56:87:e3:34:e1:7e:7c:56:92]
      - run:
          name: Install Ansible
          command: |
             apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
             ansible-playbook -i inventory.txt main-remote.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - run:
         name: Test job
         command: return 1
      - destroy_environment

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  create-infrastructure-workflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test:
         requires:
            - create_infrastructure
